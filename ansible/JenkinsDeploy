pipeline {
    agent { label 'ansible' }
    environment {
        project = "launcher"
        ppath = "/data/k8s/packages"
    }
    stages {
        stage('DEPLOY') {
            steps {
                script {
                    try {
                        sh '''
                            [[ "x${URL}" == "x" ]] && echo "please input the package file url" && exit 1
                            filename=$(echo ${URL} | awk -F'/' '{print $NF}')
                            pj=$(echo ${filename} | awk -F'-' '{print $1}')
                            version=$(echo ${filename} | awk -F'-' '{print $2}')
                            if [[ "${pj}" != "${project}" ]];then
                                echo "the url package is not ${project}"
                                exit 1
                            fi
                            if [[ ! "${filename}" =~ ^${project}-${version}-.*zip$ ]];then
                                echo "${filename} is not ${project}-${version} zip"
                                exit 1
                            fi

                            src_file=${ppath}/${URL#http://packages.royale.com/}
                            dest_file=/data/server_new/${filename}
                            dt=$(date '+%Y%m%d%H%M%S')
                            cd ansible
                            case ${Platform} in
                                SG)
                                    remote_hosts=sg_platsdk_web_0002;;
                                VN)
                                    remote_hosts=vn_platsdk_web_0001;;
                                DE)
                                    remote_hosts=de_platsdk_web_0001:de_platsdk_web_0002;;
                                ALL)
                                    remote_hosts=sg_platsdk_web_0002:vn_platsdk_web_0001:de_platsdk_web_0001:de_platsdk_web_0002;;
                                *)
                                    echo "Platform: ${Platform} is wrong"
                                    exit 1;;
                            esac
                            ansible-playbook -i hosts deploy.yml --extra-var "src_file=${src_file} dest_file=${dest_file} version=${version} project=${project} arch_file=${project}-${version}-${dt}.zip remote_hosts=${remote_hosts}"
                        '''
                    } catch(err) {
                        echo 'deploy error'
                        sh '/bin/sh ansible/notify.sh "${Platform} deploy error" "${JOB_NAME}" "${BUILD_NUMBER}"'
                        throw err
                    }
                }
            }
        }
    }
    post {
        success {
            sh '/bin/sh ansible/notify.sh "${Platform} deploy success" "${JOB_NAME}" "${BUILD_NUMBER}"'
        }
    }
}
